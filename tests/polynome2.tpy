## Resoudre une équation du second degré ... avec précision

from math import sqrt

def solve2(a,b,c):
  """a,b,c flottants
     resultat: une liste de flottants
     solutions de a x^2 + b x + c = 0, avec la plus grande précision possible"""
  #CORRIGE
  delta = b*b - 4*a*c
  if delta > 0.0:
    r = sqrt(delta)
    if b > 0:
      return [(- b - r)/(2*a), (2*c)/(-b-r)]
    else:
      return [(- b + r)/(2*a), (2*c)/(-b+r)]
  elif delta == 0.0:
    return [- b/(2*a)]
  else: return []
  #FIN
  #QUESTION
  pass # à remplacer
  #FIN

#TEST
def test(solve,a,b,c):
  delta = b*b - 4*a*c
  s = solve(a,b,c)
#  print("delta",delta,"len",len(s))
  if delta > 0.0 and len(s) != 2: return 0.0
  elif delta == 0.0 and len(s) != 1: return 0.0
  elif delta < 0.0 and len(s) != 0: return 0.0
  if delta < 0.0: return 1.0
  note = 0.0
  nb = 0
  for x in s:
#    print(x)
    error =  abs ((a*x + b)*x + c)
#    print("a=",a,"b=",b,"c=",c,"x=",x,"error=",error)
    note += 1e-5 ** error
    nb += 1
#  print(note)
  return (note/nb)

new_value_test("0",(lambda f: test(f,1,2,1)),"solve2")
new_value_test("1",(lambda f: test(f,1,1,1)),"solve2")
new_value_test("2",(lambda f: test(f,1,1e12,1)),"solve2")
new_value_test("3",(lambda f: test(f,1,1e18,1)),"solve2")

#FIN
